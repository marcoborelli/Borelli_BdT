<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADo
        CAAAAk1TRnQBSQFMAgEBAwEAASgBAAEoAQABIAEAASABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEYBgABMP8AA/4Dp/8AewADpgMAA/D/AHUAA+UDAgMAA46WAAP8A6EVcgPYDAAD2BVy
        A6ED/JMAA/oDMAYAAwkD+JMAA9EYAAO8DAADvBgAA9EnAAP6JPUD+j8AA/kDRgwAA6iTAAPDGAADvAwA
        A7wYAAPDJAADzAN8JJgDewPNOQAD9wNADwADGQPukAADwxgAA7wMAAO8GAADwyQAA44D+wMAA/se7gP6
        A9c2AAPeAzYVAAMHBlkDPANHA1UDy34AA8MYAAO8DAADvBgAA8MkAAOOA/wD4QN6A4sDTxW9A7oDcgPs
        MAAD4QNWLQADNH4AA8MYAAO8DAADvBgAA8MkAAOOA/wDgwP+AwADdBgAA/gDmi0AA/EzAAM2fgADwxgA
        A7wMAAO8GAADwyQAA44D/AN8BgADcxjkA90Dji0AA/0DAjAAAwsD9XsAA8MYAAOrDPYDqxgAA8MkAAOO
        A/wDfAYAA+MbvQPtLQAD+zYAA8F7AAPDQgADwyQAA44D/AN8HgADrwP9A7ctAAPoEgADBQN7A4oDDRgA
        A1sD/ngAA8NCAAPDJAADjgP8A3wMAAPZA9oMAAN8A/wDji0AA44SAAO6BgAD1RsAA/1vAAP4A/wDAAPD
        QgADwwMAA/wD+BsAA44D/AN8DAAG+wwAA3wD/AOOKgAD9QMFEgAD6wYAA/kbAAPGA/5pAAP1AyADQAb0
        Azw8AAM8BvQDQAMgA/UYAAOOA/wDfAwAA9wD1QwAA3wD/AOOKgADfxUAA6YGAAPGHgADsGkAA08GAAMe
        A+UD+wNrNgADawP7A+UDHgYAA08YAAOOA/wDfAwAA/gDewP+CQADfAP8A44nAAPVGwADTQNfHgADBAP0
        aQADrgkAAwcDyAP+A50wAAOdA/4DyAMHCQADrhgAA44D/AN8BgAD/QPpAwAD5AOAA/8GAAN8A/wDjiQA
        A/sDHhgAA08GwwN/GwADhG8AA9ADCwkAA58D/gPKAwckAAMHA8oD/gOfCQADCwPQGwADjgP8A3wGAAPu
        A7cGAAOrA+4GAAN8A/wDjiQAA6cbAANvBgAD3BsAA+9yAAPpAyQJAANvA/sD5wMiHgADIgPnA/sDbwkA
        AyQD6R4AA44D/AN8BgAD/ANzBvwDcwP8BgADfAP8A44hAAP7Aw8bAAMvA/8DAAP7AyUVAANGeAAD9gNJ
        CQADQgP0A/UDSRgAA0kD9QP0A0IJAANHA/YhAAOOA/wDfAkAA+sDgAOCA+sJAAN8A/wDjiEAA9chAAPN
        BgAD2xUAA0l7AAP8A3cJAAMeA+UD/AN6EgADegP8A+UDHgwAA8MkAAOOA/wDfB4AA3wD/AOOIQADqSEA
        AyID+AYAA6UVAAPyewAD/wOnCQADBwPKA/8DqwwAA6sD/wPKAwcPAAPDJAADjgP8A3wDAAOmEm0DpgMA
        A3wD/AOOIQADsSQAA2YGAAP+AxcSAAPLgQADzwMLCQADnwP+A9UGDwPVA/4DnxUAA8MkAAOOA/wDmgOE
        A3gSAAN4A4QDmwP8A44hAAO/JwAD9wYAA4ISAAPKhAAD6QMkCQADcAP7BuwD+wNwGAADwyQAA5ED+gYA
        A3sSAAN7BgAD+gORIQAD8BsAA5YDkQMwA4YD/wYAA6sSAAPRhwAD9gNJCQADQgb1A0IJAANPA2MMAAPD
        JAAD5wNrA20D9ANlA9kD8gbxA/ID2QNlA/QDbQNsA+ckAAM+GAAD+A8AA/8DWRIAA/KKAAP8A3cJAAYg
        CQADewP8A4YMAAPDMAAD7QPLA3QG7QNyA8sD7TAAA8wVAAMwA/wMAAP+A7ESAAM6kAAD/wOmEgADqQP/
        AwADhgwAA8M2AAPMA3cDdQPMOQADdBUAAxADeAOlA7oDlgM8FQAD45YAA88DCwYAAwsD0AkAA4YMAAPD
        OQAG/jwAA/gDIDYAA5OcAAPwBqYD8QwAA9kJfAN/A+9+AAPnAxQwAANAA/v/AEgAA+kDLyoAA3AD+/8A
        TgAD/AOnAxYeAAMvA8ED/v8AVwAD/gPfA5gDbANKAyUDDwNHA38DrAPYA/5+AAFCAU0BPgcAAT4DAAEo
        AwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAJ/wH+AX8B/wQACf8B/gE/Af8EAAn/AfwBPwH/BAAB8AED
        AcABDwX/AfgBHwH/BAAB8AEDAcABDwH/AYABAQL/AfABHwH/BAAB8AEDAcABDwH/AgAC/wHgAQ8B/wQA
        AfABAwHAAQ8B/wEgAQAC/wHAAQABPwQAAfABAwHAAQ8B/wIAAv8CAAE/BAAB8AEDAcABDwH/AQsB/AH/
        Af4CAAE/BAAB8AEDAcABDwH/ARgBAAH/Af4CAAEfBAAB8AIAAQ8B/wEYAQAB/wH+AgABHwQAAfACAAEP
        Af8BHwH4Af8B/gIAAQ8EAAHwAgABDwH/AR4BeAH/Af4BAQGAAQ8EAAGQAgABCQH/AR4BeAH/AfwBAQGA
        AQcIAAH/AR4BeAH/AfwBAQGAAQcIAAH/AR4BOAH/AfgCAAEHCAAB/wEZARgB/wHwAgABDwQAAYACAAEB
        Af8BGQGYAf8B8AEBAYABDwQAAcACAAEDAf8CGAH/AeABAAGAAR8EAAHgAgABBwH/ARwBOAH/AeABAAHA
        AR8EAAHwAgABDwH/AR8B+AH/AeABAAFgAQ8EAAH4AgABDwH/ARABCAH/AeABAAFgAQ8EAAH+AgABDwH/
        AQcB4AH/AeABAAEwAQ8EAAH/AgABDwH/ATcB7AH/AeABAAEwAQ8EAAH/AYABAAEPAf8CAAH/AfABAwHg
        AQ8EAAH/AcABAAEPAf8B8AEPAf8B8AEDAcABHwQAAf8B4AEEAQ8B/wH8AT8B/wH4AgABHwQAAf8B+AEc
        AQ8B/wH+AX8B/wH4AgABPwQAAf8B/AE8AQ8E/wH8AgABPwQACP8B/gIAAX8EAAn/AgAB/wQACf8BwAED
        Af8EAAs=
</value>
  </data>
</root>